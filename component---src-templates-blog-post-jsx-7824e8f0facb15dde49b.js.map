{"version":3,"sources":["webpack:///./src/utils/gatsby-frontend-helpers.js","webpack:///./src/templates/BlogPost.jsx"],"names":["getFormatedDateForLanguage","ISO8601date","language","Date","toLocaleDateString","dateStyle","useStyles","makeStyles","theme","blogTitleText","marginTop","fontSize","injectIntl","data","pageContext","location","intl","markdownRemark","title","allowComments","categories","date","frontmatter","slug","path","locale","fields","previous","next","classes","lang","description","excerpt","keywords","className","color","variant","component","dangerouslySetInnerHTML","__html","html","to","rel","pageQuery"],"mappings":"2FAAA,kCACO,IAAMA,EAA6B,CAACC,EAAaC,IACvC,IAAIC,KAAKF,GAEVG,mBAAmBF,EAAU,CAAEG,UAAW,U,kCCJ1D,kJAcMC,EAAYC,YAAYC,IAAD,CACzBC,cAAe,CACXC,UAAW,OACXC,SAAU,cA0FHC,+BAtFW,IAA2C,IAA3C,KAAEC,EAAF,YAAQC,EAAR,SAAqBC,EAArB,KAA+BC,GAAW,GAC1D,eAAEC,GAAmBJ,GACrB,MAAEK,EAAF,cAASC,EAAT,WAAwBC,EAAxB,KAAoCC,GAASJ,EAAeK,aAC5D,KAAEC,EAAF,KAAQC,EAAR,OAAcC,GAAWR,EAAeS,QAEvCC,EAAUC,GAAQ,EAAC,GAAO,GAC3BC,EAAUvB,IAEhB,OACI,kBAAC,IAAD,CAAQS,SAAUA,EAAUG,MAAOA,GAC/B,kBAAC,IAAD,CACIY,KAAMd,EAAKS,OACXP,MAAOA,EACPa,YAAad,EAAee,QAC5BC,SAAUb,IAEd,iCACI,gCACI,kBAAC,IAAD,CACIc,UAAWL,EAAQpB,cACnB0B,MAAM,eAELjB,GAEL,kBAAC,IAAD,CACIiB,MAAM,gBACNC,QAAQ,QACRC,UAAU,SAETrC,YAA2BqB,EAAML,EAAKS,UAG/C,6BACIa,wBAAyB,CAAEC,OAAQtB,EAAeuB,SAG1D,6BACI,4BACKb,GACG,4BACI,kBAAC,OAAD,CAAMc,GAAId,EAASD,OAAOF,KAAMkB,IAAI,QAApC,KACOf,EAASL,YAAYJ,QAInCU,GACG,4BACI,kBAAC,OAAD,CAAMa,GAAIb,EAAKF,OAAOF,KAAMkB,IAAI,QAC3Bd,EAAKN,YAAYJ,MADtB,YAyCrB,IAAMyB,EAAS","file":"component---src-templates-blog-post-jsx-7824e8f0facb15dde49b.js","sourcesContent":["// eslint-disable-next-line import/prefer-default-export\r\nexport const getFormatedDateForLanguage = (ISO8601date, language) => {\r\n    const date = new Date(ISO8601date);\r\n\r\n    return date.toLocaleDateString(language, { dateStyle: 'long' });\r\n};\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport { Link, injectIntl } from 'gatsby-plugin-intl';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Components\r\nimport Layout from '../components/Layout';\r\nimport SEO from '../components/SEO';\r\n\r\n// Utils\r\nimport { getFormatedDateForLanguage } from '../utils/gatsby-frontend-helpers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    blogTitleText: {\r\n        marginTop: '10px',\r\n        fontSize: '1.5rem;',\r\n    },\r\n}));\r\n\r\nconst BlogPostTemplate = ({ data, pageContext, location, intl }) => {\r\n    const { markdownRemark } = data;\r\n    const { title, allowComments, categories, date } = markdownRemark.frontmatter;\r\n    const { slug, path, locale } = markdownRemark.fields;\r\n    // const { previous, next } = pageContext;\r\n    const [previous, next] = [false, false]; // TODO\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Layout location={location} title={title}>\r\n            <SEO\r\n                lang={intl.locale}\r\n                title={title}\r\n                description={markdownRemark.excerpt}\r\n                keywords={categories}\r\n            />\r\n            <article>\r\n                <header>\r\n                    <Typography\r\n                        className={classes.blogTitleText}\r\n                        color=\"textPrimary\"\r\n                    >\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"textSecondary\"\r\n                        variant=\"body2\"\r\n                        component=\"small\"\r\n                    >\r\n                        {getFormatedDateForLanguage(date, intl.locale)}\r\n                    </Typography>\r\n                </header>\r\n                <section\r\n                    dangerouslySetInnerHTML={{ __html: markdownRemark.html }}\r\n                />\r\n            </article>\r\n            <nav>\r\n                <ul>\r\n                    {previous && (\r\n                        <li>\r\n                            <Link to={previous.fields.path} rel=\"prev\">\r\n                                ← {previous.frontmatter.title}\r\n                            </Link>\r\n                        </li>\r\n                    )}\r\n                    {next && (\r\n                        <li>\r\n                            <Link to={next.fields.path} rel=\"next\">\r\n                                {next.frontmatter.title} →\r\n                            </Link>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </nav>\r\n            {/*<div>*/}\r\n            {/*    {allowComments && (*/}\r\n            {/*        <Comments*/}\r\n            {/*            pageCanonicalUrl={path}*/}\r\n            {/*            pageId={title}*/}\r\n            {/*            locale={intl.locale}*/}\r\n            {/*        />*/}\r\n            {/*    )}*/}\r\n            {/*</div>*/}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nBlogPostTemplate.propTypes = {\r\n    pageContext: PropTypes.object.isRequired,\r\n    location: PropTypes.object.isRequired,\r\n    data: PropTypes.shape({\r\n        markdownRemark: PropTypes.shape({\r\n            frontmatter: PropTypes.object.isRequired,\r\n            fields: PropTypes.object.isRequired,\r\n            excerpt: PropTypes.string.isRequired,\r\n            html: PropTypes.string.isRequired,\r\n            id: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n        site: PropTypes.shape({\r\n            siteMetadata: PropTypes.shape({\r\n                title: PropTypes.string.isRequired,\r\n            }).isRequired,\r\n        }).isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nexport default injectIntl(BlogPostTemplate);\r\n\r\nexport const pageQuery = graphql`\r\n    query BlogPostBySlug($slug: String!) {\r\n        site {\r\n            siteMetadata {\r\n                title\r\n            }\r\n        }\r\n        markdownRemark(fields: { slug: { eq: $slug } }) {\r\n            id\r\n            excerpt(pruneLength: 160)\r\n            html\r\n            fields {\r\n                slug\r\n                path\r\n                locale\r\n            }\r\n            frontmatter {\r\n                allowComments\r\n                title\r\n                date\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"sourceRoot":""}